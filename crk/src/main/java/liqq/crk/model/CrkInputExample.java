package liqq.crk.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CrkInputExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public CrkInputExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("product_id is null");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("product_id is not null");
            return (Criteria) this;
        }

        public Criteria andProductIdEqualTo(Integer value) {
            addCriterion("product_id =", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotEqualTo(Integer value) {
            addCriterion("product_id <>", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThan(Integer value) {
            addCriterion("product_id >", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("product_id >=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThan(Integer value) {
            addCriterion("product_id <", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Integer value) {
            addCriterion("product_id <=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdIn(List<Integer> values) {
            addCriterion("product_id in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotIn(List<Integer> values) {
            addCriterion("product_id not in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdBetween(Integer value1, Integer value2) {
            addCriterion("product_id between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
            addCriterion("product_id not between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andInputDateIsNull() {
            addCriterion("input_date is null");
            return (Criteria) this;
        }

        public Criteria andInputDateIsNotNull() {
            addCriterion("input_date is not null");
            return (Criteria) this;
        }

        public Criteria andInputDateEqualTo(Date value) {
            addCriterion("input_date =", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateNotEqualTo(Date value) {
            addCriterion("input_date <>", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateGreaterThan(Date value) {
            addCriterion("input_date >", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateGreaterThanOrEqualTo(Date value) {
            addCriterion("input_date >=", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateLessThan(Date value) {
            addCriterion("input_date <", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateLessThanOrEqualTo(Date value) {
            addCriterion("input_date <=", value, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateIn(List<Date> values) {
            addCriterion("input_date in", values, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateNotIn(List<Date> values) {
            addCriterion("input_date not in", values, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateBetween(Date value1, Date value2) {
            addCriterion("input_date between", value1, value2, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputDateNotBetween(Date value1, Date value2) {
            addCriterion("input_date not between", value1, value2, "inputDate");
            return (Criteria) this;
        }

        public Criteria andInputNumIsNull() {
            addCriterion("input_num is null");
            return (Criteria) this;
        }

        public Criteria andInputNumIsNotNull() {
            addCriterion("input_num is not null");
            return (Criteria) this;
        }

        public Criteria andInputNumEqualTo(Integer value) {
            addCriterion("input_num =", value, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumNotEqualTo(Integer value) {
            addCriterion("input_num <>", value, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumGreaterThan(Integer value) {
            addCriterion("input_num >", value, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("input_num >=", value, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumLessThan(Integer value) {
            addCriterion("input_num <", value, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumLessThanOrEqualTo(Integer value) {
            addCriterion("input_num <=", value, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumIn(List<Integer> values) {
            addCriterion("input_num in", values, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumNotIn(List<Integer> values) {
            addCriterion("input_num not in", values, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumBetween(Integer value1, Integer value2) {
            addCriterion("input_num between", value1, value2, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputNumNotBetween(Integer value1, Integer value2) {
            addCriterion("input_num not between", value1, value2, "inputNum");
            return (Criteria) this;
        }

        public Criteria andInputPriceIsNull() {
            addCriterion("input_price is null");
            return (Criteria) this;
        }

        public Criteria andInputPriceIsNotNull() {
            addCriterion("input_price is not null");
            return (Criteria) this;
        }

        public Criteria andInputPriceEqualTo(BigDecimal value) {
            addCriterion("input_price =", value, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceNotEqualTo(BigDecimal value) {
            addCriterion("input_price <>", value, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceGreaterThan(BigDecimal value) {
            addCriterion("input_price >", value, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("input_price >=", value, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceLessThan(BigDecimal value) {
            addCriterion("input_price <", value, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("input_price <=", value, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceIn(List<BigDecimal> values) {
            addCriterion("input_price in", values, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceNotIn(List<BigDecimal> values) {
            addCriterion("input_price not in", values, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("input_price between", value1, value2, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("input_price not between", value1, value2, "inputPrice");
            return (Criteria) this;
        }

        public Criteria andInputTotalIsNull() {
            addCriterion("input_total is null");
            return (Criteria) this;
        }

        public Criteria andInputTotalIsNotNull() {
            addCriterion("input_total is not null");
            return (Criteria) this;
        }

        public Criteria andInputTotalEqualTo(Long value) {
            addCriterion("input_total =", value, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalNotEqualTo(Long value) {
            addCriterion("input_total <>", value, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalGreaterThan(Long value) {
            addCriterion("input_total >", value, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalGreaterThanOrEqualTo(Long value) {
            addCriterion("input_total >=", value, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalLessThan(Long value) {
            addCriterion("input_total <", value, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalLessThanOrEqualTo(Long value) {
            addCriterion("input_total <=", value, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalIn(List<Long> values) {
            addCriterion("input_total in", values, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalNotIn(List<Long> values) {
            addCriterion("input_total not in", values, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalBetween(Long value1, Long value2) {
            addCriterion("input_total between", value1, value2, "inputTotal");
            return (Criteria) this;
        }

        public Criteria andInputTotalNotBetween(Long value1, Long value2) {
            addCriterion("input_total not between", value1, value2, "inputTotal");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table crk_input
     *
     * @mbg.generated do_not_delete_during_merge Sat Nov 30 15:46:45 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table crk_input
     *
     * @mbg.generated Sat Nov 30 15:46:45 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}